openapi: 3.0.1
info:
  title: eos.uptrade Testaufgabe
  version: 1.0.0
servers:
  - url: http://localhost:8080
  - url: https://localhost:8080
tags:
  - name: users
    description: user operations
paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: A list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - users
      summary: Create a user
      operationId: createUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: Max
                  lastName:
                    type: string
                    example: Mustermann
        '400':
          description: Bad request, firstName and lastName both need to be set

  /users/{id}:
    get:
      tags:
        - users
      summary: Get a specific user
      parameters:
        - name: id
          in: path
          description: 'The user id'
          required: true
          schema:
            type: string
      operationId: getUser
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: The user with the specified id was not found
    put:
      tags:
        - users
      summary: Update a specific user
      parameters:
        - name: id
          in: path
          description: 'The user id'
          required: true
          schema:
            type: string
      operationId: updateUser
      requestBody:
        description: User object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: The user with the specified id was not found
        '400':
          description: Bad request, firstName and lastName both need to be set
    delete:
      tags:
        - users
      summary: Delete a specific user
      parameters:
        - name: id
          in: path
          description: 'The user id'
          required: true
          schema:
            type: string
      operationId: deleteUser
      responses:
        '204':
          description: The user was successful deleted
        '404':
          description: The user with the specified id was not found

components:
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          example: Max
        lastName:
          type: string
          example: Mustermann